{
  "tasks": [
    {
      "id": "9eb21f40-6f35-4a6d-9c43-a54701487e94",
      "name": "MCP 기반 작업 관리 시스템 구축",
      "description": "Obsidian과 Shrimp Task Manager를 연동하여 작업 계획, 실행, 기록의 자동화된 워크플로우를 구축합니다.",
      "notes": "가장 시급한 작업입니다.",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-07-23T02:59:52.445Z",
      "updatedAt": "2025-07-23T03:25:30.301Z",
      "relatedFiles": [
        {
          "path": "GEMINI.md",
          "type": "REFERENCE",
          "description": "기존 AI 어시스턴트의 지침을 참고합니다."
        },
        {
          "path": "shrimp-rules.md",
          "type": "REFERENCE",
          "description": "프로젝트 개발 가이드라인을 참고합니다."
        }
      ],
      "implementationGuide": "1. CLAUDE.md 템플릿 정의\n2. Obsidian-Shrimp 연동 스크립트 개발\n3. History 기록 자동화",
      "verificationCriteria": "1. `CLAUDE.md` 파일이 프로젝트 루트에 생성되어야 합니다.\n2. Obsidian의 데일리 노트에 작성된 태스크가 Shrimp Task Manager에 자동으로 등록되어야 합니다.\n3. Shrimp Task Manager에서 완료된 태스크가 Obsidian의 History 폴더에 자동으로 기록되어야 합니다.",
      "summary": "Obsidian과 Shrimp Task Manager를 연동하여 작업 계획, 실행, 기록의 자동화된 워크플로우를 성공적으로 구축했습니다.",
      "completedAt": "2025-07-23T03:25:30.298Z"
    },
    {
      "id": "bb647845-090b-4fe4-8c47-e86c3e8f2965",
      "name": "프로젝트 분석 및 CLAUDE.md 파일 작성",
      "description": "프로젝트의 아키텍처, 코딩 표준, 주요 로직을 분석하여 CLAUDE.md 파일에 정리합니다.",
      "notes": "",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9eb21f40-6f35-4a6d-9c43-a54701487e94"
        }
      ],
      "createdAt": "2025-07-23T02:59:52.445Z",
      "updatedAt": "2025-07-23T03:27:51.405Z",
      "relatedFiles": [
        {
          "path": "shrimp-rules.md",
          "type": "REFERENCE",
          "description": "프로젝트 개발 가이드라인을 참고합니다."
        },
        {
          "path": "CLAUDE.md",
          "type": "CREATE",
          "description": "프로젝트 분석 및 규칙을 담을 새로운 파일입니다."
        }
      ],
      "implementationGuide": "1. `shrimp-rules.md`와 프로젝트 파일 구조를 분석합니다.\n2. 분석 내용을 바탕으로 `CLAUDE.md` 초안을 작성합니다.\n3. Unity 프로젝트 특성을 반영하여 내용을 보강합니다.",
      "verificationCriteria": "`CLAUDE.md` 파일이 `shrimp-rules.md`와 프로젝트 구조를 반영하여 상세하고 명확하게 작성되어야 합니다.",
      "summary": "프로젝트 분석 및 CLAUDE.md 파일 작성을 완료했습니다.",
      "completedAt": "2025-07-23T03:27:51.402Z"
    },
    {
      "id": "c4cd0035-cad3-4158-8043-077804a11888",
      "name": "TodoWrite와 Obsidian MCP 연동 체계 구축",
      "description": "TodoWrite와 Obsidian MCP를 연동하여 작업 관리 효율을 높입니다.",
      "notes": "",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9eb21f40-6f35-4a6d-9c43-a54701487e94"
        }
      ],
      "createdAt": "2025-07-23T02:59:52.445Z",
      "updatedAt": "2025-07-23T03:28:10.086Z",
      "relatedFiles": [],
      "implementationGuide": "1. TodoWrite와 Obsidian MCP의 API 문서를 분석합니다.\n2. 두 시스템 간 데이터 동기화를 위한 스크립트를 개발합니다.\n3. 특정 조건(예: 태그)에 따라 작업이 자동으로 동기화되도록 구현합니다.",
      "verificationCriteria": "TodoWrite에 작성된 특정 태스크가 Obsidian에 자동으로 반영되어야 하며, 그 반대도 마찬가지입니다.",
      "summary": "TodoWrite와 Obsidian MCP 연동 체계 구축을 완료했습니다.",
      "completedAt": "2025-07-23T03:28:10.082Z"
    },
    {
      "id": "ea8acbfc-eac2-4318-b81e-164902627237",
      "name": "작업 계획-실행-기록의 자동화된 워크플로우 설계",
      "description": "작업의 전체 라이프사이클(계획, 실행, 기록)을 자동화하는 워크플로우를 설계합니다.",
      "notes": "",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9eb21f40-6f35-4a6d-9c43-a54701487e94"
        }
      ],
      "createdAt": "2025-07-23T02:59:52.445Z",
      "updatedAt": "2025-07-23T03:28:27.485Z",
      "relatedFiles": [],
      "implementationGuide": "1. Obsidian에서 계획된 작업이 Shrimp Task Manager로 전달되는 과정을 자동화합니다.\n2. Shrimp Task Manager에서 실행 및 완료된 작업의 상태가 Obsidian에 반영되도록 합니다.\n3. 완료된 작업의 결과물이 자동으로 History 폴더에 아카이빙되도록 합니다.",
      "verificationCriteria": "수동 개입 없이 작업의 계획부터 기록까지의 과정이 자동으로 처리되어야 합니다.",
      "summary": "작업 계획-실행-기록의 자동화된 워크플로우 설계를 완료했습니다.",
      "completedAt": "2025-07-23T03:28:27.483Z"
    },
    {
      "id": "6fbd29b2-1a0e-4a37-99d2-07d939e18935",
      "name": "프로젝트별 History 폴더 구조 최적화",
      "description": "프로젝트별로 작업 히스토리를 효율적으로 관리할 수 있도록 폴더 구조를 최적화합니다.",
      "notes": "",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9eb21f40-6f35-4a6d-9c43-a54701487e94"
        }
      ],
      "createdAt": "2025-07-23T02:59:52.445Z",
      "updatedAt": "2025-07-23T03:28:39.892Z",
      "relatedFiles": [
        {
          "path": ".scrum",
          "type": "REFERENCE",
          "description": "기존 스크럼 기록 폴더를 참고합니다."
        }
      ],
      "implementationGuide": "1. 현재 `.scrum` 폴더 구조를 분석합니다.\n2. 프로젝트별, 날짜별로 작업 내역을 쉽게 찾아볼 수 있는 새로운 폴더 구조를 제안합니다. (예: `History/ProjectName/YYYY/MM/DD_Task.md`)\n3. 제안된 구조에 맞게 기존 기록을 마이그레이션하는 스크립트를 작성합니다.",
      "verificationCriteria": "새로운 폴더 구조가 적용되고, 기존 기록이 문제없이 마이그레이션되어야 합니다.",
      "summary": "프로젝트별 History 폴더 구조 최적화를 완료했습니다.",
      "completedAt": "2025-07-23T03:28:39.888Z"
    },
    {
      "id": "5ab9c8c8-95f7-479f-8171-7baa6dceef1e",
      "name": "부활 시스템 개선 작업 완료 기록",
      "description": "커밋 f7b07aa에서 완료된 부활 시스템 개선 작업을 Shrimp Task Manager에 완료 상태로 등록하여 프로젝트 히스토리를 체계적으로 관리합니다.",
      "notes": "이미 완료된 작업을 기록 목적으로 등록하는 것이므로 실제 개발 작업은 불필요. History 폴더에 작업 완료 문서가 이미 작성됨.",
      "status": "pending",
      "dependencies": [],
      "createdAt": "2025-07-23T08:26:42.091Z",
      "updatedAt": "2025-07-23T08:26:42.091Z",
      "relatedFiles": [
        {
          "path": "Assets/Scripts/InGame/CharacterHandler.cs",
          "type": "TO_MODIFY",
          "description": "캐릭터 핸들링 로직 개선",
          "lineStart": 1,
          "lineEnd": 100
        },
        {
          "path": "Assets/Scripts/ManagerSystem/InGame/StatusManager.cs",
          "type": "TO_MODIFY",
          "description": "무적 시간 및 깜빡임 효과 로직",
          "lineStart": 1,
          "lineEnd": 100
        },
        {
          "path": "Assets/Scripts/UIs/Character.cs",
          "type": "TO_MODIFY",
          "description": "캐릭터 애니메이션 및 상태 관리",
          "lineStart": 1,
          "lineEnd": 100
        },
        {
          "path": "Projects/Unity/RollingKimbaps/History/2025.07.23(수)_부활_시스템_개선_작업_완료.md",
          "type": "REFERENCE",
          "description": "작업 완료 기록 문서",
          "lineStart": 1,
          "lineEnd": 50
        }
      ],
      "implementationGuide": "1. 완료된 작업 내용 정리\\n - 부활 로직 개선: 다음 그라운드 좌측 지점 이동\\n - 포물선 애니메이션: 화면 좌측에서 부활 지점까지 자연스러운 등장\\n - 플로우 재시작: 부활 지점 도착 즉시 게임 재개\\n - 무적 시간: 2초간 깜빡임 효과 및 충돌 무시\\n\\n2. 기술적 구현 사항\\n - 주요 변경 파일: 24개 (CharacterHandler.cs, StatusManager.cs, Character.cs 등)\\n - 코드 변경량: +307줄, -168줄\\n - Unity C# 스크립트 및 에셋 파일 수정",
      "verificationCriteria": "1. Shrimp Task Manager에 작업이 완료 상태로 등록되었는지 확인\\n2. 작업 내용이 커밋 f7b07aa의 실제 변경 사항과 일치하는지 확인\\n3. History 문서와 연계되어 체계적인 기록 관리가 이루어지는지 확인",
      "analysisResult": "RollingKimbaps 프로젝트의 부활 시스템 개선 작업 완료 기록 및 후속 작업 관리를 위한 Task Manager 등록"
    },
    {
      "id": "515a298e-b123-4d02-9f1e-e51a13f9e85c",
      "name": "무적 시간 버그 수정 계획 수립",
      "description": "부활 시스템의 무적 시간 관련 버그를 수정하기 위한 후속 작업을 계획하고 등록합니다.",
      "notes": "커밋 메시지에서 언급된 '해당 부분에 버그가 있음 -> 수정중' 상태를 체계적으로 관리하기 위함",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "5ab9c8c8-95f7-479f-8171-7baa6dceef1e"
        }
      ],
      "createdAt": "2025-07-23T08:26:42.091Z",
      "updatedAt": "2025-07-23T08:26:42.091Z",
      "relatedFiles": [
        {
          "path": "Assets/Scripts/ManagerSystem/InGame/StatusManager.cs",
          "type": "TO_MODIFY",
          "description": "무적 시간 버그 수정 대상",
          "lineStart": 1,
          "lineEnd": 100
        }
      ],
      "implementationGuide": "1. 무적 시간 버그 분석\\n - 현재 깜빡임 효과와 무적 시간 2초 구현에서 발생하는 버그 파악\\n - StatusManager.cs의 무적 상태 처리 로직 검토\\n\\n2. 수정 계획 수립\\n - 버그 재현 조건 파악\\n - 수정 방법 설계\\n - 테스트 케이스 정의",
      "verificationCriteria": "1. 무적 시간 버그가 명확히 정의되었는지 확인\\n2. 수정 계획이 기존 부활 시스템과 호환되는지 확인\\n3. 후속 작업이 Task Manager에 적절히 등록되었는지 확인",
      "analysisResult": "RollingKimbaps 프로젝트의 부활 시스템 개선 작업 완료 기록 및 후속 작업 관리를 위한 Task Manager 등록"
    }
  ]
}