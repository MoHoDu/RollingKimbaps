name: Unity CI Test

on:
  pull_request:
    branches: [Dev, main]
  push:
    branches: [Dev, main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ./Library
          key: Library-RollingKimbaps-${{ runner.os }}-${{ hashFiles('**/Assets/**', '**/Packages/**', '**/ProjectSettings/**') }}
          restore-keys: |
            Library-RollingKimbaps-

      - name: Run Unity Test Runner
        id: unity-tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: all

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Unity Test Results
          path: ${{ steps.unity-tests.outputs.artifactsPath }}

      - name: Send Discord Notification
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            🚦 **Unity Test 결과 알림**
            - 프로젝트: ${{ github.repository }}
            - 브랜치: ${{ github.ref }}
            - 커밋: ${{ github.sha }}
            - [워크플로우 보기](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - 결과: **${{ job.status }}**
